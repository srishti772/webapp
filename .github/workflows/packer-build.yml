name: Packer Build

on:
  push:
    branches:
      - main
      - A04

jobs:
  packer-build:
    runs-on: ubuntu-latest
    environment: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Zip Web App
        run: zip -r webapp.zip .

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install dependencies
        run: npm install

      - name: Run Unit Tests
        run: npm run test:unit

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Set up Packer
        uses: hashicorp/setup-packer@main
        with:
          version: ${{ vars.PACKER_VERSION }}

      - name: Run Packer init
        run: |
          cd packer 
          packer init ./custom-ami.pkr.hcl

      - name: Create  variables.pkr.hcl file
        run: |
          cd packer
          touch variables.pkr.hcl
          echo MYSQL_USER: ${{  secrets.MYSQL_USER }} >> variables.pkr.hcl
          echo MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }} >> variables.pkr.hcl
          echo MYSQL_HOST: ${{ vars.MYSQL_HOST }} >> variables.pkr.hcl
          echo MYSQL_PORT: ${{ vars.MYSQL_PORT }} >> variables.pkr.hcl
          echo APP_PORT=${{ vars.APP_PORT }} >> variables.pkr.hcl

          echo AMI_SOURCE_DESCRIPTION=${{ vars.AMI_SOURCE_DESCRIPTION }} >> variables.pkr.hcl
          echo AMI_SOURCE_ROOT_DEVICE_TYPE=${{ vars.AMI_SOURCE_ROOT_DEVICE_TYPE }} >>  variables.pkr.hcl
          echo AMI_SOURCE_VIRTUALIZATION=${{ vars.AMI_SOURCE_VIRTUALIZATION }} >>  variables.pkr.hcl
          echo SOURCE_AMI_OWNERS=${{ vars.SOURCE_AMI_OWNERS }} >>  variables.pkr.hcl

          echo AMI_REGION=${{ vars.AWS_REGION }} >>  variables.pkr.hcl
          echo AMI_NAME=${{ vars.AMI_NAME }} >>  variables.pkr.hcl
          echo INSTANCE_TYPE=${{ vars.INSTANCE_TYPE }} >>  variables.pkr.hcl
          echo AMI_DESCRIPTION=${{ vars.AMI_DESCRIPTION }} >>  variables.pkr.hcl
          echo SSH_USER=${{ vars.SSH_USER }} >>  variables.pkr.hcl
          echo VPC_IS_DEFAULT=${{ vars.VPC_IS_DEFAULT }} >>  variables.pkr.hcl
          echo AMI_USERS=${{ vars.AMI_USERS }} >>  variables.pkr.hcl
          echo AWS_PROFILE=${{ vars.AWS_PROFILE }} >>  variables.pkr.hcl

          echo "Contents of .env file:"
          cat variables.pkr.hcl

      - name: Build Image
        id: build
        run: |
           packer build \
            -var-file='./variables.pkr.hcl' \
            ./custom-ami.pkr.hcl

      - name: List files
        run: |
          ls -la
          find . -name "manifest.json"

      - name: Upload Manifest
        uses: actions/upload-artifact@v4
        with:
          name: packer-manifest
          path: manifest.json
